@page
@model FuwaCards.Pages.singlesModel
@{
    var pageCount = (int)Math.Ceiling((double)Model.Filter.TotalItems / Model.Filter.PageSize);
}
<form method="get">
    <div class="filter-container">
        <input type="hidden" name="Filter.PageSize" value="@Model.Filter.PageSize" />

        <div class="dropdown">
            <span class="filter-label">Rarity</span>
            <div class="dropdown-content" id="rarityDropdown">
                @foreach (var rarity in Model.RarityOptions.Take(5))
                {
                    var count = Model.Filter.RarityCounts.ContainsKey(rarity) ? Model.Filter.RarityCounts[rarity] : 0;
                    <div class="filter-option">
                        <input type="checkbox" id="rarity_@rarity" name="Filter.RaritySelection" value="@rarity" @(Model.Filter.RaritySelection != null && Model.Filter.RaritySelection.Contains(rarity) ? "checked" : "") />
                        <label for="rarity_@rarity" class="rarityLabel">@rarity</label>
                        <label class="rarityCount"> (@count)</label>
                    </div>
                }
                <div class="extra-options">
                    @foreach (var rarity in Model.RarityOptions.Skip(5))
                    {
                        var count = Model.Filter.RarityCounts.ContainsKey(rarity) ? Model.Filter.RarityCounts[rarity] : 0;
                        <div class="filter-option">
                            <input type="checkbox" id="rarity_@rarity" name="Filter.RaritySelection" value="@rarity" @(Model.Filter.RaritySelection != null && Model.Filter.RaritySelection.Contains(rarity) ? "checked" : "") />
                            <label for="rarity_@rarity" class="rarityLabel">@rarity</label>
                            <label class="rarityCount"> (@count)</label>
                        </div>
                    }
                </div>
                @if (Model.RarityOptions.Count > 5)
                {
                    <button type="button" class="show-more" data-target="rarityDropdown">Show More</button>
                    <div class="filter-arrow"></div>
                }
            </div>
        </div>

        <div class="dropdown">
            <span class="filter-label">Set</span>
            <div class="dropdown-content" id="setDropdown">
                @foreach (var setName in Model.SetNameOptions.Take(5))
                {
                    var count = Model.Filter.SetNameCounts.ContainsKey(setName) ? Model.Filter.SetNameCounts[setName] : 0;
                    <div class="filter-option">
                        <input type="checkbox" id="setName_@setName" name="Filter.SetNameSelection" value="@setName" @(Model.Filter.SetNameSelection != null && Model.Filter.SetNameSelection.Contains(setName) ? "checked" : "") />
                        <label for="setName_@setName" class="setNameLabel">@setName</label>
                        <label class="setNameCount"> (@count)</label>
                    </div>
                }
                <div class="extra-options">
                    @foreach (var setName in Model.SetNameOptions.Skip(5))
                    {
                        var count = Model.Filter.SetNameCounts.ContainsKey(setName) ? Model.Filter.SetNameCounts[setName] : 0;
                        <div class="filter-option">
                            <input type="checkbox" id="setName_@setName" name="Filter.SetNameSelection" value="@setName" @(Model.Filter.SetNameSelection != null && Model.Filter.SetNameSelection.Contains(setName) ? "checked" : "") />
                            <label for="setName_@setName" class="setNameLabel">@setName</label>
                            <label class="setNameCount"> (@count)</label>
                        </div>
                    }
                </div>
                @if (Model.SetNameOptions.Count > 5)
                {
                    <button type="button" class="show-more" data-target="setDropdown">Show More</button>
                    <div class="filter-arrow"></div>

                }
            </div>
        </div>
    </div>

    <div class="content">
        <div class="pagination">
            @if (Model.Filter.PageNumber > 1)
            {
                <button type="submit" class="page-button" name="Filter.PageNumber" value="@(Model.Filter.PageNumber - 1)">Previous</button>
            }
            @for (var i = 1; i <= pageCount; i++)
            {
                <button type="submit" class="page-button" name="Filter.PageNumber" value="@i" @(Model.Filter.PageNumber == i ? "disabled" : "")>@i</button>
            }
            @if (Model.Filter.PageNumber < pageCount)
            {
                <button type="submit" class="page-button" name="Filter.PageNumber" value="@(Model.Filter.PageNumber + 1)">Next</button>
            }
        </div>
    </form>

<div class="singles-container">
    @if (Model.Filter.PokemonSinglesList != null)
    {
        foreach (var pokemonSingle in Model.Filter.PokemonSinglesList)
        {
            var imageUrl = Url.Content($"~{pokemonSingle.Image}");
            <div class="individual-container">
                <img class="pokemon-image" src="@imageUrl" alt="Listing Image" />
                <p class="pokemon-name">@pokemonSingle.Name @pokemonSingle.Rarity @pokemonSingle.SetName</p>
                <p class="pokemon-price">£@pokemonSingle.Price.ToString("F2")</p>
                @if (User.IsInRole("Admin"))
                {
                    <form method="post" asp-page-handler="Delete" class="delete-form">
                        <input type="hidden" name="id" value="@pokemonSingle.Id" />
                        <button type="submit">Delete</button>
                    </form>
                    <form method="get" asp-page="/Admin/Stock" class="edit-form">
                        <input type="hidden" name="id" value="@pokemonSingle.Id" />
                        <button type="submit" class="edit-button">Edit</button>
                    </form>
                }
                <a href="?handler=ShowDetails&id=@pokemonSingle.Id" class="preview-button" data-back="See More" data-front="See More"></a>
            </div>
        }
    }
</div>

@if (Model.SelectedPokemonSingle != null)
{
    <div id="modal" class="modal" style="display: block;">
        <div class="modal-content">
            <span class="close" onclick="closeModal()"> Close &times;</span>
            <img id="modal-image" src="@Url.Content($"~{Model.SelectedPokemonSingle.Image}")" alt="Listing Image" />

            <div class="modal-information">
                <h2 class="modal-title">@Model.SelectedPokemonSingle.Name</h2>
                <p class="modal-price">Price: £@Model.SelectedPokemonSingle.Price.ToString("F2")</p>

                <p class="modal-quantity">Quantity</p>
                <div class="quantity-controls">
                    <button class="minus-one">-</button>
                    <button class="quantity">1</button>
                    <button class="plus-one">+</button>
                </div>

                <a class="preview-button small" data-back="Add to Basket" data-front="Add to Basket" href="#"></a>
            </div>
        </div>
    </div>
}
